<script>
alert('문자');
</script>//'문자' 경고창 표시

<script>
console.log('문자');
</script>//크롬개발자 도구(검사) 콘솔창에 문자표시

주석은 //씀 혹은 /* */

if(false){
    alert(1);
} else if(true){
    alert(2);
} else if(true){
    alert(3);
} else {
    alert(4);
}//2출력

if(false){
    alert(1);
} else if(false){
    alert(2);
} else if(true){
    alert(3);
} else {
    alert(4);
}//3출력
============================
id = prompt('아이디를 입력해주세요.') //괄호안에는 입력 지시문
        if(id=='egoing'){
            alert('아이디가 일치 합니다.')
        } else {
            alert('아이디가 일치하지 않습니다.')
        }//prompt는 경고창에 입력하는 부분(scanf와 같음)
------------------------------------------------------------
        id = prompt('아이디를 입력해주세요.');
        password = prompt('비밀번호를 입력해주세요.');
        if(id=='egoing' && password=='111111'){
            alert('인증 했습니다.');
        } else {
            alert('인증에 실패 했습니다.');
        }//아이디, 패스워드입력

if(!true && !true){
    alert(1);
}
if(!false && !true){
    alert(2);
}
if(!true && !false){
    alert(3);
if(!false && !false){
    alert(4);
}//4출력

while(true){
    document.write('coding everybody <br />');
}// document.write();는 웹문서에 출력하는 값
for(var i = 0; i < 10; i++){
    if(i === 5) {
        break;
    }
    document.write('coding everybody'+i+'<br />');
}//반복문과 조건문의 조화 그리고 break. break는 i가 5가 되면 멈춤

for(var i = 0; i < 10; i++){
    if(i === 5) {
        continue;
    }
    document.write('coding everybody'+i+'<br />');
}// 5가되면 브레이크를 걸어 멈추고(5 구문을 출력안함) 6부터 다시실행

// 0부터 9까지 변수 i에 순차적으로 값을 할당        
for(var i = 0; i < 10; i++){
    // 0부터 9까지의 변수를 j의 값에 순차적으로 할당
    for(var j = 0; j < 10; j++){    
        // i와 j의 값을 더한 후에 출력
        // String은 숫자인 i와 j의 데이터 타입을 문자로 형태를 변환하는 명령이다. 
        // String()을 제거하고 실행해보면 의미가 좀 더 분명하게 드러날 것이다.
        document.write(String(i)+String(j)+'<br />');
    }
}//2중 for문 0에서 99까지 i는 십의자리 j는 일의자리 string()은 숫자 i와j를 i와 j에 할당된 숫자를 문자로 바꿔줌 1->'1'
===================================================================
ES6이 발표되면서 interpolation (보간법) 문법이 보다 쉬어졌습니다!

ES5까지는 
==> Console.log('Coding everybody' + i + 'everyone');

이런 식으로 작은 따옴표와 + 를 사용하였는데, 

ES6부터는 ` 키(grave accent 키 - 숫자 1 키 왼쪽의 물결표시 밑) 와 ${ } 의 사용으로 가능합니다.
==> Console.log(`Coding everybody ${i} everyone`);

참고하시길 바랍니다...^^
==================================================
function 함수명( [인자...[,인자]] ){
   코드
   return 반환값
}//함수

function get_arguments(arg1, arg2){
    return arg1 + arg2
}
 
alert(get_arguments(10, 20));
alert(get_arguments(20, 30));//매개변수 받는 함수

var numbering = function (){
    i = 0;
    while(i < 10){
        document.write(i);
        i += 1;
    }   
}
numbering();//다르게 함수정의하기

(function (){
    i = 0;
    while(i < 10){
        document.write(i);
        i += 1;
    }   
}
)();//세번째방법, 함수명이 없고 바로 실행해서 익명함수라 부름

var member = ['egoing', 'k8805', 'sorialgi']
alert(member[0]);
alert(member[1]);
alert(member[2]);//배열사용 

function get_members(){
    return ['egoing', 'k8805', 'sorialgi'];
}
var members = get_members();
document.write(members[0]);
document.write(members[1]);
document.write(members[2]);//배열 응용

function get_members(){
    return ['egoing', 'k8805', 'sorialgi'];
}
members = get_members();
// members.length는 배열에 담긴 값의 숫자를 알려준다. 
for(i = 0; i < members.length; i++){
    // members[i].toUpperCase()는 members[i]에 담긴 문자를 대문자로 변환해준다.
    document.write(members[i].toUpperCase());   
    document.write('<br />');
}//함수+반복문

var arr = [1, 2, 3, 4, 5];
alert(arr.length);//배열 크기 확인
var li = ['a', 'b', 'c', 'd', 'e'];
li.push('f');
alert(li);//배열에 "f"집어넣기 (끝에넣음)

var li = ['a', 'b', 'c', 'd', 'e'];
li = li.concat(['f', 'g']);
alert(li);//배열에 여러개의 원소 집어넣기(솔직히 push에 여러개 넣어도 상관없음)

var li = ['a', 'b', 'c', 'd', 'e'];
li.unshift('z');
alert(li);//push의 방법인데 색인0 즉 맨앞에 추가시킴

var li = ['a', 'b', 'c', 'd', 'e'];
li.splice(2, 0, 'B');
alert(li);//인덱스2번 B를추가(0은 그자리에 있는 0개의 원소를 삭제하고 집어넣는다는 뜻) 결과값 a,b,B,c,d,e
var li = ['a', 'b', 'c', 'd', 'e'];
li.splice(2, 1, 'B');
alert(li);// ['a','b','B','d','e'] slice는 배열을 넣을뿐 아니라 삭제된 데이터를 리턴해주기도함
다음은 배열의 첫번째 원소를 제거하는 방법이다. shift를 사용하면 된다. 아래 결과는 b, c, d, e 다.

var li = ['a', 'b', 'c', 'd', 'e'];
li.shift();
alert(li);//shift는 앞쪽부터제거
var li = ['a', 'b', 'c', 'd', 'e'];
li.pop();
alert(li);//pop은 뒤쪽부터제거
var li = ['c', 'e', 'a', 'b', 'd'];
li.sort();
alert(li);//오름차순정렬 크기순서!
var li = ['c', 'e', 'a', 'b', 'd'];
li.reverse();
alert(li);//역순순정렬 크기순서아님! 출력값 d b a e c 내림차순하려면 li.sort;li.reverse;